/*======================================================================*/
/* Macro definitions for an AGRIF-specific workaround that enhances     */
/* compiler compatibility                                               */
/*======================================================================*/
/*                                                                      */
/* Some AGRIF interface calls include arguments that are module         */
/* procedures ('procname' named arguments). These can be specified with */
/* macro 'PROCNAME( PROC )', where 'PROC' is the name of a procedure.   */
/* Normally ('key_agrif_procptr' undefined), 'PROCNAME( PROC )' is      */
/* simply expanded to the corresponding named argument and an           */
/* accompanying macro 'PROCPTR( PROC )' results in an empty line.       */
/* Alternatively ('key_agrif_procptr' defined), 'PROCNAME( PROC )'      */
/* is expanded to a named argument that passes a procedure pointer      */
/* with implicit interface, which can be declared and associated with   */
/* procedure 'PROC' through the variable declaration entry that results */
/* from the expansion of the macro 'PROCPTR( PROC )' (requires          */
/* '!$AGRIF_DO_NOT_TREAT' directive). Macro 'PROCPTR_PUBLIC( PROC )' is */
/* a variant of 'PROCPTR( PROC ) that additionally specifies the        */
/* 'PUBLIC' attribute, either for the procedure 'PROC'                  */
/* ('key_agrif_procptr' undefined) or for the corresponding procedure   */
/* pointer ('key_agrif_procptr' defined).                               */
/*                                                                      */
/*----------------------------------------------------------------------*/
/* NEMO/OCE 5.0 , NEMO Consortium (2024)                                */
/* Software governed by the CeCILL license (see ./LICENSE)              */
/*----------------------------------------------------------------------*/
/*                                                                      */
/* For now, 'key_agrif_procptr' is defined here to ensure good compiler */
/* compatibility; this blanket setting is planned to be removed         */
/* together with a planned widening of the range of compilers           */
/* detectable by script 'arch/build_arch-auto.sh' and the selective     */
/* definition of this key in architecture files generated by this       */
/* script.                                                              */
#define key_agrif_procptr
/*                                                                      */
#if ! defined key_agrif_procptr
#  define PROCNAME( PROC ) procname = PROC
#  define PROCPTR( PROC )
#  define PROCPTR_PUBLIC( PROC ) PUBLIC PROC
#else
#  define PROCNAME( PROC ) procname = p/**/PROC
#  define PROCPTR( PROC ) PROCEDURE(), POINTER ::   p/**/PROC => PROC
#  define PROCPTR_PUBLIC( PROC ) PROCEDURE(), POINTER, PUBLIC ::   p/**/PROC => PROC
#endif

   function nf90_put_var_OneByteInt(ncid, varid, values, start)
     integer,                         intent( in) :: ncid, varid
     integer (kind = OneByteInt), intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start
     integer                                      :: nf90_put_var_OneByteInt
     nf90_put_var_OneByteInt = 0
   end function nf90_put_var_OneByteInt
   function nf90_put_var_TwoByteInt(ncid, varid, values, start)
     integer,                         intent( in) :: ncid, varid
     integer (kind = TwoByteInt), intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start
     integer                                      :: nf90_put_var_TwoByteInt
     nf90_put_var_TwoByteInt = 0
   end function nf90_put_var_TwoByteInt
   function nf90_put_var_FourByteInt(ncid, varid, values, start)
     integer,                         intent( in) :: ncid, varid
     integer (kind = FourByteInt), intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start
     integer                                      :: nf90_put_var_FourByteInt
     nf90_put_var_FourByteInt = 0
   end function nf90_put_var_FourByteInt
   function nf90_put_var_FourByteReal(ncid, varid, values, start)
     integer,                         intent( in) :: ncid, varid
     real (kind = FourByteReal), intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start
     integer                                      :: nf90_put_var_FourByteReal
     nf90_put_var_FourByteReal = 0
   end function nf90_put_var_FourByteReal
   function nf90_put_var_EightByteReal(ncid, varid, values, start)
     integer,                         intent( in) :: ncid, varid
     real (kind = EightByteReal), intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start
     integer                                      :: nf90_put_var_EightByteReal
     nf90_put_var_EightByteReal = 0
   end function nf90_put_var_EightByteReal
   function nf90_get_var_OneByteInt(ncid, varid, values, start)
     integer,                         intent( in) :: ncid, varid
     integer (kind = OneByteInt), intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start
     integer                                      :: nf90_get_var_OneByteInt
     nf90_get_var_OneByteInt = 0
   end function nf90_get_var_OneByteInt
   function nf90_get_var_TwoByteInt(ncid, varid, values, start)
     integer,                         intent( in) :: ncid, varid
     integer (kind = TwoByteInt), intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start
     integer                                      :: nf90_get_var_TwoByteInt
     nf90_get_var_TwoByteInt = 0
   end function nf90_get_var_TwoByteInt
   function nf90_get_var_FourByteInt(ncid, varid, values, start)
     integer,                         intent( in) :: ncid, varid
     integer (kind = FourByteInt), intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start
     integer                                      :: nf90_get_var_FourByteInt
     nf90_get_var_FourByteInt = 0
   end function nf90_get_var_FourByteInt
   function nf90_get_var_FourByteReal(ncid, varid, values, start)
     integer,                         intent( in) :: ncid, varid
     real (kind = FourByteReal), intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start
     integer                                      :: nf90_get_var_FourByteReal
     nf90_get_var_FourByteReal = 0
   end function nf90_get_var_FourByteReal
   function nf90_get_var_EightByteReal(ncid, varid, values, start)
     integer,                         intent( in) :: ncid, varid
     real (kind = EightByteReal), intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start
     integer                                      :: nf90_get_var_EightByteReal
     nf90_get_var_EightByteReal = 0
   end function nf90_get_var_EightByteReal
   function nf90_put_var_1D_OneByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = OneByteInt), dimension(:), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_1D_OneByteInt
     nf90_put_var_1D_OneByteInt = 0
   end function nf90_put_var_1D_OneByteInt
   function nf90_put_var_2D_OneByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = OneByteInt), dimension(:, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_2D_OneByteInt
     nf90_put_var_2D_OneByteInt = 0
   end function nf90_put_var_2D_OneByteInt
   function nf90_put_var_3D_OneByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = OneByteInt), dimension(:, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_3D_OneByteInt
     nf90_put_var_3D_OneByteInt = 0
   end function nf90_put_var_3D_OneByteInt
   function nf90_put_var_4D_OneByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = OneByteInt), dimension(:, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_4D_OneByteInt
     nf90_put_var_4D_OneByteInt = 0
   end function nf90_put_var_4D_OneByteInt
   function nf90_put_var_5D_OneByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = OneByteInt), dimension(:, :, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_5D_OneByteInt
     nf90_put_var_5D_OneByteInt = 0
   end function nf90_put_var_5D_OneByteInt
   function nf90_put_var_6D_OneByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = OneByteInt), dimension(:, :, :, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_6D_OneByteInt
     nf90_put_var_6D_OneByteInt = 0
   end function nf90_put_var_6D_OneByteInt
   function nf90_put_var_7D_OneByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = OneByteInt), dimension(:, :, :, :, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_7D_OneByteInt
     nf90_put_var_7D_OneByteInt = 0
   end function nf90_put_var_7D_OneByteInt
   function nf90_put_var_1D_TwoByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = TwoByteInt), dimension(:), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_1D_TwoByteInt
     nf90_put_var_1D_TwoByteInt = 0
   end function nf90_put_var_1D_TwoByteInt
   function nf90_put_var_2D_TwoByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = TwoByteInt), dimension(:, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_2D_TwoByteInt
     nf90_put_var_2D_TwoByteInt = 0
   end function nf90_put_var_2D_TwoByteInt
   function nf90_put_var_3D_TwoByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = TwoByteInt), dimension(:, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_3D_TwoByteInt
     nf90_put_var_3D_TwoByteInt = 0
   end function nf90_put_var_3D_TwoByteInt
   function nf90_put_var_4D_TwoByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = TwoByteInt), dimension(:, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_4D_TwoByteInt
     nf90_put_var_4D_TwoByteInt = 0
   end function nf90_put_var_4D_TwoByteInt
   function nf90_put_var_5D_TwoByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = TwoByteInt), dimension(:, :, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_5D_TwoByteInt
     nf90_put_var_5D_TwoByteInt = 0
   end function nf90_put_var_5D_TwoByteInt
   function nf90_put_var_6D_TwoByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = TwoByteInt), dimension(:, :, :, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_6D_TwoByteInt
     nf90_put_var_6D_TwoByteInt = 0
   end function nf90_put_var_6D_TwoByteInt
   function nf90_put_var_7D_TwoByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = TwoByteInt), dimension(:, :, :, :, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_7D_TwoByteInt
     nf90_put_var_7D_TwoByteInt = 0
   end function nf90_put_var_7D_TwoByteInt
   function nf90_put_var_1D_FourByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = FourByteInt), dimension(:), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_1D_FourByteInt
     nf90_put_var_1D_FourByteInt = 0
   end function nf90_put_var_1D_FourByteInt
   function nf90_put_var_2D_FourByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = FourByteInt), dimension(:, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_2D_FourByteInt
     nf90_put_var_2D_FourByteInt = 0
   end function nf90_put_var_2D_FourByteInt
   function nf90_put_var_3D_FourByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = FourByteInt), dimension(:, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_3D_FourByteInt
     nf90_put_var_3D_FourByteInt = 0
   end function nf90_put_var_3D_FourByteInt
   function nf90_put_var_4D_FourByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = FourByteInt), dimension(:, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_4D_FourByteInt
     nf90_put_var_4D_FourByteInt = 0
   end function nf90_put_var_4D_FourByteInt
   function nf90_put_var_5D_FourByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = FourByteInt), dimension(:, :, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_5D_FourByteInt
     nf90_put_var_5D_FourByteInt = 0
   end function nf90_put_var_5D_FourByteInt
   function nf90_put_var_6D_FourByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = FourByteInt), dimension(:, :, :, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_6D_FourByteInt
     nf90_put_var_6D_FourByteInt = 0
   end function nf90_put_var_6D_FourByteInt
   function nf90_put_var_7D_FourByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = FourByteInt), dimension(:, :, :, :, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_7D_FourByteInt
     nf90_put_var_7D_FourByteInt = 0
   end function nf90_put_var_7D_FourByteInt
   function nf90_put_var_1D_FourByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = FourByteReal), dimension(:), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_1D_FourByteReal
     nf90_put_var_1D_FourByteReal = 0
   end function nf90_put_var_1D_FourByteReal
   function nf90_put_var_2D_FourByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = FourByteReal), dimension(:, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_2D_FourByteReal
     nf90_put_var_2D_FourByteReal = 0
   end function nf90_put_var_2D_FourByteReal
   function nf90_put_var_3D_FourByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = FourByteReal), dimension(:, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_3D_FourByteReal
     nf90_put_var_3D_FourByteReal = 0
   end function nf90_put_var_3D_FourByteReal
   function nf90_put_var_4D_FourByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = FourByteReal), dimension(:, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_4D_FourByteReal
     nf90_put_var_4D_FourByteReal = 0
   end function nf90_put_var_4D_FourByteReal
   function nf90_put_var_5D_FourByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = FourByteReal), dimension(:, :, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_5D_FourByteReal
     nf90_put_var_5D_FourByteReal = 0
   end function nf90_put_var_5D_FourByteReal
   function nf90_put_var_6D_FourByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = FourByteReal), dimension(:, :, :, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_6D_FourByteReal
     nf90_put_var_6D_FourByteReal = 0
   end function nf90_put_var_6D_FourByteReal
   function nf90_put_var_7D_FourByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = FourByteReal), dimension(:, :, :, :, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_7D_FourByteReal
     nf90_put_var_7D_FourByteReal = 0
   end function nf90_put_var_7D_FourByteReal
   function nf90_put_var_1D_EightByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = EightByteReal), dimension(:), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_1D_EightByteReal
     nf90_put_var_1D_EightByteReal = 0
   end function nf90_put_var_1D_EightByteReal
   function nf90_put_var_2D_EightByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = EightByteReal), dimension(:, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_2D_EightByteReal
     nf90_put_var_2D_EightByteReal = 0
   end function nf90_put_var_2D_EightByteReal
   function nf90_put_var_3D_EightByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = EightByteReal), dimension(:, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_3D_EightByteReal
     nf90_put_var_3D_EightByteReal = 0
   end function nf90_put_var_3D_EightByteReal
   function nf90_put_var_4D_EightByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = EightByteReal), dimension(:, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_4D_EightByteReal
     nf90_put_var_4D_EightByteReal = 0
   end function nf90_put_var_4D_EightByteReal
   function nf90_put_var_5D_EightByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = EightByteReal), dimension(:, :, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_5D_EightByteReal
     nf90_put_var_5D_EightByteReal = 0
   end function nf90_put_var_5D_EightByteReal
   function nf90_put_var_6D_EightByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = EightByteReal), dimension(:, :, :, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_6D_EightByteReal
     nf90_put_var_6D_EightByteReal = 0
   end function nf90_put_var_6D_EightByteReal
   function nf90_put_var_7D_EightByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = EightByteReal), dimension(:, :, :, :, :, :, :), &
                                      intent( in) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_put_var_7D_EightByteReal
     nf90_put_var_7D_EightByteReal = 0
   end function nf90_put_var_7D_EightByteReal
   function nf90_get_var_1D_OneByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = OneByteInt), dimension(:), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_1D_OneByteInt
     nf90_get_var_1D_OneByteInt = 0
   end function nf90_get_var_1D_OneByteInt
   function nf90_get_var_2D_OneByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = OneByteInt), dimension(:, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_2D_OneByteInt
     nf90_get_var_2D_OneByteInt = 0
   end function nf90_get_var_2D_OneByteInt
   function nf90_get_var_3D_OneByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = OneByteInt), dimension(:, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_3D_OneByteInt
     nf90_get_var_3D_OneByteInt = 0
   end function nf90_get_var_3D_OneByteInt
   function nf90_get_var_4D_OneByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = OneByteInt), dimension(:, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_4D_OneByteInt
     nf90_get_var_4D_OneByteInt = 0
   end function nf90_get_var_4D_OneByteInt
   function nf90_get_var_5D_OneByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = OneByteInt), dimension(:, :, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_5D_OneByteInt
     nf90_get_var_5D_OneByteInt = 0
   end function nf90_get_var_5D_OneByteInt
   function nf90_get_var_6D_OneByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = OneByteInt), dimension(:, :, :, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_6D_OneByteInt
     nf90_get_var_6D_OneByteInt = 0
   end function nf90_get_var_6D_OneByteInt
   function nf90_get_var_7D_OneByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = OneByteInt), dimension(:, :, :, :, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_7D_OneByteInt
     nf90_get_var_7D_OneByteInt = 0
   end function nf90_get_var_7D_OneByteInt
   function nf90_get_var_1D_TwoByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = TwoByteInt), dimension(:), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_1D_TwoByteInt
     nf90_get_var_1D_TwoByteInt = 0
   end function nf90_get_var_1D_TwoByteInt
   function nf90_get_var_2D_TwoByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = TwoByteInt), dimension(:, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_2D_TwoByteInt
     nf90_get_var_2D_TwoByteInt = 0
   end function nf90_get_var_2D_TwoByteInt
   function nf90_get_var_3D_TwoByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = TwoByteInt), dimension(:, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_3D_TwoByteInt
     nf90_get_var_3D_TwoByteInt = 0
   end function nf90_get_var_3D_TwoByteInt
   function nf90_get_var_4D_TwoByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = TwoByteInt), dimension(:, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_4D_TwoByteInt
     nf90_get_var_4D_TwoByteInt = 0
   end function nf90_get_var_4D_TwoByteInt
   function nf90_get_var_5D_TwoByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = TwoByteInt), dimension(:, :, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_5D_TwoByteInt
     nf90_get_var_5D_TwoByteInt = 0
   end function nf90_get_var_5D_TwoByteInt
   function nf90_get_var_6D_TwoByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = TwoByteInt), dimension(:, :, :, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_6D_TwoByteInt
     nf90_get_var_6D_TwoByteInt = 0
   end function nf90_get_var_6D_TwoByteInt
   function nf90_get_var_7D_TwoByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = TwoByteInt), dimension(:, :, :, :, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_7D_TwoByteInt
     nf90_get_var_7D_TwoByteInt = 0
   end function nf90_get_var_7D_TwoByteInt
   function nf90_get_var_1D_FourByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = FourByteInt), dimension(:), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_1D_FourByteInt
     nf90_get_var_1D_FourByteInt = 0
   end function nf90_get_var_1D_FourByteInt
   function nf90_get_var_2D_FourByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = FourByteInt), dimension(:, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_2D_FourByteInt
     nf90_get_var_2D_FourByteInt = 0
   end function nf90_get_var_2D_FourByteInt
   function nf90_get_var_3D_FourByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = FourByteInt), dimension(:, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_3D_FourByteInt
     nf90_get_var_3D_FourByteInt = 0
   end function nf90_get_var_3D_FourByteInt
   function nf90_get_var_4D_FourByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = FourByteInt), dimension(:, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_4D_FourByteInt
     nf90_get_var_4D_FourByteInt = 0
   end function nf90_get_var_4D_FourByteInt
   function nf90_get_var_5D_FourByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = FourByteInt), dimension(:, :, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_5D_FourByteInt
     nf90_get_var_5D_FourByteInt = 0
   end function nf90_get_var_5D_FourByteInt
   function nf90_get_var_6D_FourByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = FourByteInt), dimension(:, :, :, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_6D_FourByteInt
     nf90_get_var_6D_FourByteInt = 0
   end function nf90_get_var_6D_FourByteInt
   function nf90_get_var_7D_FourByteInt(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     integer (kind = FourByteInt), dimension(:, :, :, :, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_7D_FourByteInt
     nf90_get_var_7D_FourByteInt = 0
   end function nf90_get_var_7D_FourByteInt
   function nf90_get_var_1D_FourByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = FourByteReal), dimension(:), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_1D_FourByteReal
     nf90_get_var_1D_FourByteReal = 0
   end function nf90_get_var_1D_FourByteReal
   function nf90_get_var_2D_FourByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = FourByteReal), dimension(:, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_2D_FourByteReal
     nf90_get_var_2D_FourByteReal = 0
   end function nf90_get_var_2D_FourByteReal
   function nf90_get_var_3D_FourByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = FourByteReal), dimension(:, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_3D_FourByteReal
     nf90_get_var_3D_FourByteReal = 0
   end function nf90_get_var_3D_FourByteReal
   function nf90_get_var_4D_FourByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = FourByteReal), dimension(:, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_4D_FourByteReal
     nf90_get_var_4D_FourByteReal = 0
   end function nf90_get_var_4D_FourByteReal
   function nf90_get_var_5D_FourByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = FourByteReal), dimension(:, :, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_5D_FourByteReal
     nf90_get_var_5D_FourByteReal = 0
   end function nf90_get_var_5D_FourByteReal
   function nf90_get_var_6D_FourByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = FourByteReal), dimension(:, :, :, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_6D_FourByteReal
     nf90_get_var_6D_FourByteReal = 0
   end function nf90_get_var_6D_FourByteReal
   function nf90_get_var_7D_FourByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = FourByteReal), dimension(:, :, :, :, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_7D_FourByteReal
     nf90_get_var_7D_FourByteReal = 0
   end function nf90_get_var_7D_FourByteReal
   function nf90_get_var_1D_EightByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = EightByteReal), dimension(:), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_1D_EightByteReal
     nf90_get_var_1D_EightByteReal = 0
   end function nf90_get_var_1D_EightByteReal
   function nf90_get_var_2D_EightByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = EightByteReal), dimension(:, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_2D_EightByteReal
     nf90_get_var_2D_EightByteReal = 0
   end function nf90_get_var_2D_EightByteReal
   function nf90_get_var_3D_EightByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = EightByteReal), dimension(:, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_3D_EightByteReal
     nf90_get_var_3D_EightByteReal = 0
   end function nf90_get_var_3D_EightByteReal
   function nf90_get_var_4D_EightByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = EightByteReal), dimension(:, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_4D_EightByteReal
     nf90_get_var_4D_EightByteReal = 0
   end function nf90_get_var_4D_EightByteReal
   function nf90_get_var_5D_EightByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = EightByteReal), dimension(:, :, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_5D_EightByteReal
     nf90_get_var_5D_EightByteReal = 0
   end function nf90_get_var_5D_EightByteReal
   function nf90_get_var_6D_EightByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = EightByteReal), dimension(:, :, :, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_6D_EightByteReal
     nf90_get_var_6D_EightByteReal = 0
   end function nf90_get_var_6D_EightByteReal
   function nf90_get_var_7D_EightByteReal(ncid, varid, values, start, count, stride, map)
     integer,                         intent( in) :: ncid, varid
     real (kind = EightByteReal), dimension(:, :, :, :, :, :, :), &
                                      intent(out) :: values
     integer, dimension(:), optional, intent( in) :: start, count, stride, map
     integer                                      :: nf90_get_var_7D_EightByteReal
     nf90_get_var_7D_EightByteReal = 0
   end function nf90_get_var_7D_EightByteReal

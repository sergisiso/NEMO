function nf90_put_var_1D_EightByteInt(ncid, varid, values, start, count, stride, map)
  integer,                         intent( in) :: ncid, varid
  integer (kind = EightByteInt), dimension(:), intent( in) :: values
  integer, dimension(:), optional, intent( in) :: start, count, stride, map
  integer                                      :: nf90_put_var_1D_EightByteInt
     nf90_put_var_1D_EightByteInt = 0
end function nf90_put_var_1D_EightByteInt
function nf90_put_var_2D_EightByteInt(ncid, varid, values, start, count, stride, map)
  integer,                         intent( in) :: ncid, varid
  integer (kind = EightByteInt), dimension(:, :), &
       intent( in) :: values
  integer, dimension(:), optional, intent( in) :: start, count, stride, map
  integer                                      :: nf90_put_var_2D_EightByteInt
     nf90_put_var_2D_EightByteInt = 0
end function nf90_put_var_2D_EightByteInt
function nf90_put_var_3D_EightByteInt(ncid, varid, values, start, count, stride, map)
  integer,                         intent( in) :: ncid, varid
  integer (kind = EightByteInt), dimension(:, :, :), &
       intent( in) :: values
  integer, dimension(:), optional, intent( in) :: start, count, stride, map
  integer                                      :: nf90_put_var_3D_EightByteInt
     nf90_put_var_3D_EightByteInt = 0
end function nf90_put_var_3D_EightByteInt
function nf90_put_var_4D_EightByteInt(ncid, varid, values, start, count, stride, map)
  integer,                         intent( in) :: ncid, varid
  integer (kind = EightByteInt), dimension(:, :, :, :), &
       intent( in) :: values
  integer, dimension(:), optional, intent( in) :: start, count, stride, map
  integer                                      :: nf90_put_var_4D_EightByteInt
     nf90_put_var_4D_EightByteInt = 0
end function nf90_put_var_4D_EightByteInt
function nf90_put_var_5D_EightByteInt(ncid, varid, values, start, count, stride, map)
  integer,                         intent( in) :: ncid, varid
  integer (kind = EightByteInt), dimension(:, :, :, :, :), &
       intent( in) :: values
  integer, dimension(:), optional, intent( in) :: start, count, stride, map
  integer                                      :: nf90_put_var_5D_EightByteInt
     nf90_put_var_5D_EightByteInt = 0
end function nf90_put_var_5D_EightByteInt
function nf90_put_var_6D_EightByteInt(ncid, varid, values, start, count, stride, map)
  integer,                         intent( in) :: ncid, varid
  integer (kind = EightByteInt), dimension(:, :, :, :, :, :), &
       intent( in) :: values
  integer, dimension(:), optional, intent( in) :: start, count, stride, map
  integer                                      :: nf90_put_var_6D_EightByteInt
     nf90_put_var_6D_EightByteInt = 0
end function nf90_put_var_6D_EightByteInt
function nf90_put_var_7D_EightByteInt(ncid, varid, values, start, count, stride, map)
  integer,                         intent( in) :: ncid, varid
  integer (kind = EightByteInt), dimension(:, :, :, :, :, :, :), &
       intent( in) :: values
  integer, dimension(:), optional, intent( in) :: start, count, stride, map
  integer                                      :: nf90_put_var_7D_EightByteInt
     nf90_put_var_7D_EightByteInt = 0
end function nf90_put_var_7D_EightByteInt
function nf90_get_var_1D_EightByteInt(ncid, varid, values, start, count, stride, map)
  integer,                         intent( in) :: ncid, varid
  integer (kind = EightByteInt), dimension(:), &
       intent(out) :: values
  integer, dimension(:), optional, intent( in) :: start, count, stride, map
  integer                                      :: nf90_get_var_1D_EightByteInt
     nf90_get_var_1D_EightByteInt = 0
end function nf90_get_var_1D_EightByteInt
function nf90_get_var_2D_EightByteInt(ncid, varid, values, start, count, stride, map)
  integer,                         intent( in) :: ncid, varid
  integer (kind = EightByteInt), dimension(:, :), &
       intent(out) :: values
  integer, dimension(:), optional, intent( in) :: start, count, stride, map
  integer                                      :: nf90_get_var_2D_EightByteInt
     nf90_get_var_2D_EightByteInt = 0
end function nf90_get_var_2D_EightByteInt
function nf90_get_var_3D_EightByteInt(ncid, varid, values, start, count, stride, map)
  integer,                         intent( in) :: ncid, varid
  integer (kind = EightByteInt), dimension(:, :, :), &
       intent(out) :: values
  integer, dimension(:), optional, intent( in) :: start, count, stride, map
  integer                                      :: nf90_get_var_3D_EightByteInt
     nf90_get_var_3D_EightByteInt = 0
end function nf90_get_var_3D_EightByteInt
function nf90_get_var_4D_EightByteInt(ncid, varid, values, start, count, stride, map)
  integer,                         intent( in) :: ncid, varid
  integer (kind = EightByteInt), dimension(:, :, :, :), &
       intent(out) :: values
  integer, dimension(:), optional, intent( in) :: start, count, stride, map
  integer                                      :: nf90_get_var_4D_EightByteInt
     nf90_get_var_4D_EightByteInt = 0
end function nf90_get_var_4D_EightByteInt
function nf90_get_var_5D_EightByteInt(ncid, varid, values, start, count, stride, map)
  integer,                         intent( in) :: ncid, varid
  integer (kind = EightByteInt), dimension(:, :, :, :, :), &
       intent(out) :: values
  integer, dimension(:), optional, intent( in) :: start, count, stride, map
  integer                                      :: nf90_get_var_5D_EightByteInt
     nf90_get_var_5D_EightByteInt = 0
end function nf90_get_var_5D_EightByteInt
function nf90_get_var_6D_EightByteInt(ncid, varid, values, start, count, stride, map)
  integer,                         intent( in) :: ncid, varid
  integer (kind = EightByteInt), dimension(:, :, :, :, :, :), &
       intent(out) :: values
  integer, dimension(:), optional, intent( in) :: start, count, stride, map
  integer                                      :: nf90_get_var_6D_EightByteInt
     nf90_get_var_6D_EightByteInt = 0
end function nf90_get_var_6D_EightByteInt
function nf90_get_var_7D_EightByteInt(ncid, varid, values, start, count, stride, map)
  integer,                         intent( in) :: ncid, varid
  integer (kind = EightByteInt), dimension(:, :, :, :, :, :, :), &
       intent(out) :: values
  integer, dimension(:), optional, intent( in) :: start, count, stride, map
  integer                                      :: nf90_get_var_7D_EightByteInt
     nf90_get_var_7D_EightByteInt = 0
end function nf90_get_var_7D_EightByteInt
function nf90_put_var_EightByteInt(ncid, varid, values, start)
  integer,                         intent( in) :: ncid, varid
  integer (kind = EightByteInt), intent( in) :: values
  integer, dimension(:), optional, intent( in) :: start
  integer                                      :: nf90_put_var_EightByteInt
     nf90_put_var_EightByteInt = 0
end function nf90_put_var_EightByteInt
function nf90_get_var_EightByteInt(ncid, varid, values, start)
  integer,                         intent( in) :: ncid, varid
  integer (kind = EightByteInt), intent(out) :: values
  integer, dimension(:), optional, intent( in) :: start
  integer                                      :: nf90_get_var_EightByteInt
     nf90_get_var_EightByteInt = 0
end function nf90_get_var_EightByteInt
